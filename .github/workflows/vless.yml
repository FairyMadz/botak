name: 🌐 Deploy Vless Worker

on:
  workflow_dispatch:
    inputs:
      WORKER_NAME:
        description: "🌟 Name of your worker"
        required: true
        type: string
      DOMAIN_NAME:
        description: "🏠 Domain Name on Cloudflare"
        required: false
        type: string
        default: gpj.us.kg

jobs:
  deploy:
    name: 🚀 Deploy Cloudflare Worker
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: 📂 Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Install Node.js
      - name: 🛠️ Install Node.js (LTS)
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      # Step 3: Install Dependencies
      - name: 📦 Install Dependencies
        run: |
          npm install -g wrangler javascript-obfuscator

      # Step 4: Process Configuration
      - name: 🔧 Update Configuration
        run: |
          WORKER_NAME=${{ github.event.inputs.WORKER_NAME }}
          DOMAIN_NAME=${{ github.event.inputs.DOMAIN_NAME }}

          echo "Updating WORKER_NAME to ${WORKER_NAME}"
          sed -i "s/%worker_name%/${WORKER_NAME}/g" ./vless/wrangler.toml
          echo "Updating DOMAIN_NAME to ${DOMAIN_NAME}"
          sed -i "s/%domain_name%/${DOMAIN_NAME}/g" ./vless/wrangler.toml

      # Step 5: Obfuscate worker.js
      - name: 🔒 Obfuscate Worker Script
        run: |
          javascript-obfuscator ./vless/_worker.js --output ./vless/worker.js \
            --compact true \
            --control-flow-flattening true \
            --control-flow-flattening-threshold 0.5 \
            --dead-code-injection false \
            --identifier-names-generator mangled \
            --rename-globals false \
            --string-array true \
            --string-array-encoding base64 \
            --string-array-threshold 0.75 \
            --transform-object-keys true \
            --unicode-escape-sequence true

      # Step 6: Deploy to Cloudflare
      - name: 🚀 Deploy to Cloudflare
        run: |
          cd vless
          wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
